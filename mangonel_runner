#!/usr/bin/env python

import argparse
import os
import sys
import unittest



if __name__ == "__main__":

    prog = "Mangonel"
    description = "Runs unittest against a Katello instance."
    usage = "%(prog)s --host <HOST> --username <NAME> --password <PASSWORD> --tests [<TEST1>, <TESTn>]"
    epilog = "Constructive comments and feedback can be sent to Og Maciel <omaciel at ogmaciel dot com>."
    version = "%(prog)s 0.1"

    parser = argparse.ArgumentParser(prog=prog, usage=usage, description=description, epilog=epilog, version=version)

    parser.add_argument('-s', '--host', type=str, dest='host', help='Server url')
    parser.add_argument('-u', '--username', type=str, dest='username', help='Valid system username')
    parser.add_argument('-p', '--password', type=str, dest='password', help='Valid system user password')
    parser.add_argument('--project', type=str, dest='project', default='/katello', help='Project can be either "katello" or "headpin"')
    parser.add_argument('--port', type=str, dest='port', default='443', help='Server port, defaults to 443')
    parser.add_argument('-t', '--tests', type=str, nargs='+', help='The name of the tests to be run.')
    parser.add_argument('--verbose', type=int, dest='verbose', choices=range(1,6), default=3, help='Debug verbosity level')

    [args, ignored_args] = parser.parse_known_args()

    # Validation
    if args.host is None or args.username is None or args.password is None:
        parser.print_usage()
        sys.exit(-1)
    else:
        os.environ['KATELLO_HOST'] = args.host
        os.environ['KATELLO_USERNAME'] = args.username
        os.environ['KATELLO_PASSWORD'] = args.password

        # Make sure that PROJECT starts with leading "/"
        if not args.project.startswith("/"): args.project = "/" + args.project
        os.environ['PROJECT'] = args.project

        os.environ['KATELLO_PORT'] = args.port
        os.environ['VERBOSITY'] = str(args.verbose)

    loader = unittest.TestLoader()
    suite = unittest.TestSuite()

    for test_name in args.tests:
        suite.addTests(loader.loadTestsFromName(test_name))

    runner = unittest.TextTestRunner(verbosity=args.verbose)
    result = runner.run(suite)
